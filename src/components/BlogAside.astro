---
import CommentAside from "./CommentAside.astro";
import {comment} from "../consts";
import {getCollectionByName} from "../utils/getCollectionByName";
import getUniqueTags from "../utils/getUniqueTags";
import getCountByCategory from "../utils/getCountByCategory";
import {sortPostsByDate} from "../utils/sortPostsByDate";
import {site} from '../consts'
import {t} from '../i18n/utils'
const blogs = await getCollectionByName('blog')
let tagArr = getUniqueTags(blogs);
if(site.asideTagsMaxSize > 0)
  tagArr = tagArr.slice(0, site.asideTagsMaxSize)
let categoryCount = getCountByCategory(blogs);
let sortPosts = await sortPostsByDate(blogs);
let resultPosts = sortPosts.splice(0, site.recentBlogSize);
---

<div>
  {
    Object.keys(categoryCount).length > 0 && (
      <div class="aside-widget">
        <i class="ri-folder-line menu-icon"/>{t('sidebar.categories')}
      </div>
    )
  }
  {
    Object.keys(categoryCount).map((category) => (
      <a
        class="my-1 truncate block hover:text-skin-active"
        title={category + " (" + categoryCount[category] + ")"}
        href={"/category/" + category}
      >
        {(category === 'uncategorized' ? t('sidebar.uncategorized') : category) + " (" + categoryCount[category] + ")"}
      </a>
    ))
  }
</div>
<div>
  {
    tagArr.length > 0 && (
      <div class="aside-widget">
        <i class="ri-price-tag-3-line menu-icon"/>
        {t('sidebar.tags')}
      </div>
    )
  }
  <div class="flex flex-wrap">
    {
      tagArr &&
      tagArr.map((tag) =>
        <a class="inline-block truncate m-1 border p-1 text-sm rounded hover:text-skin-active" title={tag} href={"/tags/" + tag}>{tag}</a>
      )
    }
    {
      tagArr &&
      site.asideTagsMaxSize > 0 &&
      (
        <a class="inline-block truncate m-1 border p-1 text-sm rounded hover:text-skin-active" title={t('more')} href={"/tags"}>{t('more')} Â»</a>
      )
    }
  </div>
</div>

<div>
  <div class="aside-widget">
    <i class="ri-file-line menu-icon"></i> {t('sidebar.recentArticle')}
  </div>
  <div class="flex flex-col">
    {
      resultPosts.map((post) => (
        <a
          href={"/blog/" + post.slug}
          class="truncate cursor-pointr mt-1 hover:text-skin-active"
          title={post.data.title}
        >
          {post.data.title}
        </a>
      ))
    }
  </div>
</div>

{comment.enable && comment.type === "waline" && <CommentAside/>}
