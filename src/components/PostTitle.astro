---
import {formatDate} from "../utils/formatDate";
import {dealLabel} from "../utils/dealLabel";
import {t} from '../i18n/utils'
import dayjs from "dayjs";
const {title, date, category, tags, lastModified = '', draft = false, readingTime = {}} = Astro.props
const lastModifiedDate = dayjs(lastModified === '' ? date : lastModified);
const publishDate = dayjs(date);
const mostRecentDate = lastModifiedDate.isAfter(publishDate) ? lastModifiedDate : publishDate;
const mostRecent = mostRecentDate.format('YYYY-MM-DD');
const currentDate = dayjs();
---

<div>
  <!-- title -->
  <h1 class="break-all text-xl font-bold">{title}</h1>

  <div class="flex flex-wrap items-center my-2">
    <!-- date -->
    {
      date &&
      <div class="mr-2"><i class="ri-calendar-2-fill mr-1"/>{formatDate(date)}</div>
    }

    <!-- draft -->
    {
      draft &&
      <div class="mr-2"><i class="ri-git-pr-draft-line mr-1"/>{t('title.draft')}</div>
    }

    <!-- category -->
    {
      category && dealLabel(category).filter(item => item !== 'uncategorized').map((categoryName) =>
        <a href={"/category/" + categoryName} class="text-wrap break-all hover:text-skin-active mr-2"><i class="ri-folder-3-line mr-1"/>{categoryName}</a>
      )
    }

    <!-- tag -->
    {
      tags && dealLabel(tags).map((tagName) =>
        <a href={"/tags/" + tagName} class="text-wrap break-all hover:text-skin-active mr-2"><i class="ri-hashtag mr-1"/>{tagName}</a>
      )
    }

    <!-- update -->
    <!--{-->
    <!--  lastModified && (-->
    <!--    <div class="mr-2"><i class="ri-calendar-check-fill "></i>{t('post.lastUpdated')}:{lastModified}</div>-->
    <!--  )-->
    <!--}-->

    <!-- minutes -->
    {
      readingTime.minutes && readingTime.minutes !== 0 && (
        <div class="mr-2 flex items-center"><i class="ri-hourglass-fill mr-1"/>{Math.ceil(readingTime.minutes)}{t('title.minutes')}</div>
        <div class="mr-2 flex items-center"><i class="ri-quill-pen-line mr-1"></i>{readingTime.words}{t('title.words')}</div>
      )
    }
  </div>
  {
    currentDate.isAfter(mostRecentDate.add(6, 'month')) &&
    <div class="shadow w-auto flex bg-skin-card p-2 rounded text-sm"><i class="ri-error-warning-line mr-1"/>{t('post.lastUpdatedTip1')} {formatDate(mostRecent)} {t('post.lastUpdatedTip2')} </div>
  }
</div>
